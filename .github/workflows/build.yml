name: Build

on:
  push:
    branches: [ "**" ]
    tags-ignore: [ "**" ]
  pull_request:
  release:
    types: [ released ]

concurrency:
  group: "${{ github.workflow }}-${{ github.event.number || github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    # Only run on PRs if the source branch is on someone else's repo
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}

    runs-on: ubuntu-latest

    env:
      ORG_GRADLE_PROJECT_omegaUsername: "${{ secrets.OMEGA_REPO_USERNAME }}"
      ORG_GRADLE_PROJECT_omegaPassword: "${{ secrets.OMEGA_REPO_PASSWORD }}"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Build Artifact
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: "${{ !startsWith(github.ref, 'refs/heads/master/') || github.event_name == 'pull_request' }}"
          arguments: "build"

      - name: Determine Status
        run: |
          if [ "$(./gradlew properties | awk '/^version:/ { print $2; }' | grep '\-SNAPSHOT')" ]; then
            echo "STATUS=snapshot" >> $GITHUB_ENV
          else
            echo "STATUS=release" >> $GITHUB_ENV
          fi

      - name: Set up Artifact Upload
        id: upload
        run: echo '::set-output name=ARTIFACT_PATH::'$(./gradlew getArtifactPath -q)

      - name: Upload Artifact to Actions
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}
          path: ${{ steps.upload.outputs.ARTIFACT_PATH }}

      - name: Upload Artifact to Release
        if: "${{ env.STATUS == 'release' && github.event_name == 'release' }}"
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          asset_name: ${{ github.event.repository.name }}.jar
          file: ${{ steps.upload.outputs.ARTIFACT_PATH }}
          tag: ${{ github.ref }}
